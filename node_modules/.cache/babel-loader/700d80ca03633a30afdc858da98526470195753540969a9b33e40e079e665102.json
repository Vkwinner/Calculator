{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkbed\\\\Desktop\\\\Github Projects\\\\Calculator\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [userMessage, setUserMessage] = useState('');\n  const [chatIndex, setChatIndex] = useState(0);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [botMessages, setBotMessages] = useState([]);\n  useEffect(() => {\n    const fetchBotMessages = async () => {\n      try {\n        const response = await fetch('https://bot-server-nxtd.onrender.com');\n        if (response.ok) {\n          const data = await response.json();\n          // Update bot messages state\n          setBotMessages(data);\n        } else {\n          console.error('Failed to fetch bot messages:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching bot messages:', error);\n      }\n    };\n\n    // Fetch bot messages when component mounts\n    fetchBotMessages();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Only add a bot message if there are more bot messages available\n    if (chatIndex < botMessages.length) {\n      setChatHistory([...chatHistory, {\n        user: userMessage,\n        bot: botMessages[chatIndex].content\n      }]);\n      setChatIndex(chatIndex + 1); // Move to the next bot message\n    } else {\n      // Display a message indicating no more responses\n      setChatHistory([...chatHistory, {\n        user: userMessage,\n        bot: \"No more responses available\"\n      }]);\n    }\n    setUserMessage('');\n  };\n  const handleUserMessage = e => {\n    setUserMessage(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"User: \", message.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), message.bot && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Bot: \", message.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userMessage,\n        onChange: handleUserMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"MCpaNWWYoKBTNuRystQhFNubNVk=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatApp","_s","userMessage","setUserMessage","chatIndex","setChatIndex","chatHistory","setChatHistory","botMessages","setBotMessages","fetchBotMessages","response","fetch","ok","data","json","console","error","statusText","handleSubmit","e","preventDefault","length","user","bot","content","handleUserMessage","target","value","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/vkbed/Desktop/Github Projects/Calculator/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatApp = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [chatIndex, setChatIndex] = useState(0);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [botMessages, setBotMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBotMessages = async () => {\r\n      try {\r\n        const response = await fetch('https://bot-server-nxtd.onrender.com');  \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          // Update bot messages state\r\n          setBotMessages(data);\r\n        } else {\r\n          console.error('Failed to fetch bot messages:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching bot messages:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch bot messages when component mounts\r\n    fetchBotMessages();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Only add a bot message if there are more bot messages available\r\n    if (chatIndex < botMessages.length) {\r\n      setChatHistory([...chatHistory, { user: userMessage, bot: botMessages[chatIndex].content }]);\r\n      setChatIndex(chatIndex + 1); // Move to the next bot message\r\n    } else {\r\n      // Display a message indicating no more responses\r\n      setChatHistory([...chatHistory, { user: userMessage, bot: \"No more responses available\" }]);\r\n    }\r\n    setUserMessage('');\r\n  };\r\n\r\n  const handleUserMessage = (e) => {\r\n    setUserMessage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {chatHistory.map((message, index) => (\r\n          <div key={index}>\r\n            <div>User: {message.user}</div>\r\n            {message.bot && <div>Bot: {message.bot}</div>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={userMessage} onChange={handleUserMessage} />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}